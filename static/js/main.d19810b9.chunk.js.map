{"version":3,"sources":["utils.js","WebApi.js","redux/reducers/userReducer.js","pages/LoginPage/LoginPage.js","redux/reducers/postReducer.js","pages/HomePage/HomePage.js","components/Header/Header.js","pages/SinglePostPage/SinglePostPage.js","pages/AddPostPage/AddPostPage.js","pages/AboutPage/AboutPage.js","pages/PostListPage/PostListPage.js","contexts.js","pages/RegistrationPage/RegistrationPage.js","pages/EditPostPage/EditPostPage.js","components/App/App.js","redux/store.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPostsByLimit","URL","a","fetch","res","headers","json","posts","links","get","replace","split","map","link","getMe","authorization","then","userReducer","createSlice","name","initialState","id","nickname","password","username","isLoadingUser","errorMessage","reducers","setIsLoadingUser","state","action","payload","setUser","setErrorMessage","actions","loginUser","dispatch","method","body","JSON","stringify","login","ok","message","getUserInfo","setTimeout","data","registerNewUser","registerUser","ErrorMessage","styled","div","Form","form","LoginPage","useState","setUsername","setPassword","history","useHistory","useDispatch","useSelector","store","user","userId","useEffect","push","onSubmit","e","preventDefault","value","onChange","target","type","postReducer","isLoadingPost","post","postsList","postsCount","newPostResponse","updateOldPostResponse","setIsLoadingPost","setPost","setNewPostResponse","setUpdateOldPostResponse","setPosts","setPostsList","setLinks","setPostsCount","getTotalCountOfPosts","count","getPost","getPostAPI","catch","err","console","log","getPosts","newPost","title","addPost","updateOldPost","updatePost","Root","PostContainer","PostTitle","Link","PostDate","Post","to","Date","createdAt","toLocaleString","HomePage","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","location","useLocation","pathname","onClick","PostBody","PostHeader","PostBodyWrapper","SinglePostPage","useParams","isLoading","postUserId","removePost","AddPostPage","setTitle","setBody","cols","rows","Title","h1","About","h3","AboutPage","PaginationBtn","button","PostListPage","PaginationBtns","setLink","totalCount","getPostsByLimitWebAPI","length","AuthContext","createContext","RegistrationPage","useContext","setNickname","EditPostPAGE","App","exact","path","children","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d19810b9.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\nconst BASE_URL = \"https://warm-reef-89911.herokuapp.com\";\nexport const LINK_URL =\n  \"https://warm-reef-89911.herokuapp.com/posts?_page=1&_limit=5&_sort=createdAt&_order=desc\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\n\nexport const removePost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n  }).then((res) => res.json());\n};\n\nexport const getPostsByLimit = async (URL) => {\n  const res = await fetch(URL);\n  const { headers } = res;\n  const posts = await res.json();\n\n  let links = headers\n    .get(\"link\")\n    .replace(/\\</gi, \"\")\n    .replace(/\\>/gi, \"\")\n    .split(\",\");\n\n  links = links.map((link) => {\n    const newLink = link.replace(/http/, \"https\").replace(/ /, \"\").split(\";\");\n    return newLink;\n  });\n\n  return {\n    links,\n    posts,\n  };\n};\n\nexport const getTotalCountOfPosts = () => {\n  return fetch(\n    `${BASE_URL}/posts?_page=1&_limit=5&_sort=createdAt&_order=desc`\n  ).then((res) => res.headers.get(\"x-total-count\"));\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const addPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const updatePost = (title, body, id) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const registerUser = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { login, getMe, registerUser } from \"../../WebApi\";\nimport { setAuthToken } from \"../../utils\";\n\nexport const userReducer = createSlice({\n  name: \"user\",\n  initialState: {\n    id: null,\n    nickname: null,\n    password: null,\n    username: null,\n    isLoadingUser: true,\n    errorMessage: null,\n  },\n  reducers: {\n    setIsLoadingUser: (state, action) => {\n      state.isLoadingUser = action.payload;\n    },\n    setUser: (state, action) => {\n      state.id = action.payload.id;\n      state.nickname = action.payload.nickname;\n      state.password = action.payload.password;\n      state.username = action.payload.username;\n    },\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingUser,\n  setUser,\n  setErrorMessage,\n} = userReducer.actions;\n\nexport const loginUser = (username, password) => (dispatch) => {\n  dispatch(setIsLoadingUser(true));\n  login(username, password).then((res) => {\n    if (res && res.ok === 1) {\n      setAuthToken(res.token);\n      return;\n    }\n    setAuthToken(null);\n    dispatch(setErrorMessage(res.message));\n  });\n};\n\nexport const getUserInfo = () => (dispatch) => {\n  setTimeout(() => {\n    getMe().then((res) => {\n      if (res && res.ok === 1) {\n        dispatch(setUser(res.data));\n        dispatch(setIsLoadingUser(false));\n        return;\n      }\n      dispatch(setIsLoadingUser(false));\n    });\n  }, 500);\n};\n\nexport const registerNewUser = (nickname, username, password) => (dispatch) => {\n  registerUser(nickname, username, password).then((res) => {\n    if (!res.ok) {\n      dispatch(setErrorMessage(res.message));\n    }\n    setAuthToken(res.token);\n    getMe().then((res) => {\n      if (res.ok) {\n        dispatch(setIsLoadingUser(false));\n        dispatch(setUser(res.data));\n        return;\n      }\n      dispatch(setIsLoadingUser(false));\n    });\n  });\n};\n\nexport default userReducer.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  loginUser,\n  getUserInfo,\n  setErrorMessage,\n} from \"../../redux/reducers/userReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 5rem;\n`;\n\nexport default function LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const isLoadingUser = useSelector((store) => store.user.isLoadingUser);\n  const userId = useSelector((store) => store.user.id);\n  const errorMessage = useSelector((store) => store.user.errorMessage);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser(username, password));\n  };\n\n  useEffect(() => {\n    if (isLoadingUser) {\n      dispatch(getUserInfo());\n      return;\n    }\n    if (userId) {\n      history.push(\"/\");\n    }\n\n    return () => {\n      dispatch(setErrorMessage(null));\n    };\n  }, [isLoadingUser, dispatch, history, userId]);\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  getPost as getPostAPI,\n  addPost,\n  updatePost,\n  getPosts as getPostsWebAPI,\n  getPostsByLimit as getPostsByLimitWebAPI,\n  getTotalCountOfPosts as getTotalCountOfPostsWebAPI,\n} from \"../../WebApi\";\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoadingPost: false,\n    post: null,\n    posts: null,\n    postsList: null,\n    links: null,\n    postsCount: null,\n    newPostResponse: null,\n    updateOldPostResponse: false,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n    setUpdateOldPostResponse: (state, action) => {\n      state.updateOldPostResponse = action.payload;\n    },\n    setPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n    setPostsList: (state, action) => {\n      state.postsList = action.payload;\n    },\n    setLinks: (state, action) => {\n      state.links = action.payload;\n    },\n    setPostsCount: (state, action) => {\n      state.postsCount = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingPost,\n  setPost,\n  setPosts,\n  setPostsList,\n  setLinks,\n  setPostsCount,\n  setNewPostResponse,\n  setUpdateOldPostResponse,\n} = postReducer.actions;\n\nexport const getPostsByLimit = (link) => (dispatch) => {\n  getPostsByLimitWebAPI(link).then((posts) => {\n    dispatch(setLinks(posts.links));\n    dispatch(setPostsList(posts.posts));\n  });\n};\n\nexport const getTotalCountOfPosts = () => (dispatch) => {\n  getTotalCountOfPostsWebAPI().then((count) => dispatch(setPostsCount(count)));\n};\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id)\n    .then((res) => {\n      dispatch(setPost(res));\n      dispatch(setIsLoadingPost(false));\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getPosts = () => (dispatch) => {\n  getPostsWebAPI().then((posts) => dispatch(setPosts(posts)));\n};\n\nexport const newPost = (title, body) => (dispatch) => {\n  addPost(title, body).then((data) => {\n    dispatch(setNewPostResponse(data));\n  });\n};\n\nexport const updateOldPost = (title, body, id) => (dispatch) => {\n  updatePost(title, body, id)\n    .then((res) => {\n      if (res && res.id) {\n        dispatch(setUpdateOldPostResponse(true));\n        return;\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport default postReducer.reducer;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPosts } from \"../../redux/reducers/postReducer\";\nimport { Link } from \"react-router-dom\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts.posts);\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch]);\n\n  return (\n    <Root>\n      {posts && posts.map((post) => <Post key={post.id} post={post} />)}\n    </Root>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { setAuthToken } from \"../../utils\";\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser } from \"../../redux/reducers/userReducer\";\n\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing: border-box;\n  background-color: #fff;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0,0,0,0.1);\n  `}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const userId = useSelector((store) => store.user.id);\n  const isLoadingUser = useSelector((store) => store.user.isLoadingUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(\n      setUser({\n        id: null,\n        nickname: null,\n        password: null,\n        username: null,\n      })\n    );\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\n            關於部落格\n          </Nav>\n          <Nav to=\"/postsList\" $active={location.pathname === \"/postsList\"}>\n            文章列表\n          </Nav>\n          {userId && (\n            <Nav $active={location.pathname === \"/new-post\"} to=\"/new-post\">\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      {isLoadingUser ? null : (\n        <NavbarList>\n          {!userId && (\n            <Nav $active={location.pathname === \"/login\"} to=\"/login\">\n              登入\n            </Nav>\n          )}\n          {!userId && (\n            <Nav $active={location.pathname === \"/register\"} to=\"/register\">\n              註冊\n            </Nav>\n          )}\n          {userId && <Nav onClick={handleLogout}>登出</Nav>}\n        </NavbarList>\n      )}\n    </HeaderContainer>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { removePost } from \"../../WebApi\";\nimport { getPost, setPost } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 30px;\n  color: #333;\n  text-decoration: none;\n  margin-bottom: 10px;\n  font-weight: bold;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostBody = styled.div`\n  white-space: pre-line;\n  line-height: 2;\n  text-align: left;\n`;\n\nSinglePostPage.propTypes = {\n  post: PropTypes.object,\n};\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  max-width: 600px;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`;\n\nconst PostBodyWrapper = styled.div`\n  max-width: 600px;\n  width: 100%;\n  text-align: center;\n  padding: 10px;\n`;\n\nexport default function SinglePostPage() {\n  const history = useHistory();\n  let { id } = useParams();\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n  const postUserId = post ? post.userId : null;\n  const userId = useSelector((store) => store.user.id);\n  useEffect(() => {\n    dispatch(getPost(id));\n\n    return () => {\n      dispatch(setPost(null));\n    };\n  }, [id, dispatch]);\n\n  const handleRemovePost = () => {\n    removePost(id).then(() => {\n      history.push(\"/\");\n    });\n  };\n  const handleEditPost = () => {\n    history.push(`/posts/${id}/edit`);\n  };\n\n  return (\n    <Root>\n      {!isLoading && post && post.id ? (\n        <PostContainer>\n          {postUserId === userId && (\n            <>\n              <button onClick={handleRemovePost}>刪除</button>\n              <button onClick={handleEditPost}>編輯</button>\n            </>\n          )}\n          <PostHeader>\n            <PostTitle>{post.title}</PostTitle>\n            <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n          </PostHeader>\n          <PostBodyWrapper>\n            <PostBody>{post.body}</PostBody>\n          </PostBodyWrapper>\n        </PostContainer>\n      ) : null}\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { newPost, setNewPostResponse } from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 5rem;\n`;\n\nexport default function AddPostPage() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n  const newPostResponse = useSelector((store) => store.posts.newPostResponse);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(newPost(title, body));\n  };\n\n  useEffect(() => {\n    if (newPostResponse && newPostResponse.ok === 0) {\n      setErrorMessage(newPostResponse.message);\n    }\n    setTitle(\"\");\n    setBody(\"\");\n    if (newPostResponse && newPostResponse.id) {\n      history.push(\"/posts/\" + newPostResponse.id);\n    }\n    return () => {\n      dispatch(setNewPostResponse(null));\n    };\n  }, [newPostResponse, history, dispatch]);\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        title:\n        <input value={title} onChange={(e) => setTitle(e.target.value)} />\n      </div>\n      <div>\n        body:\n        <textarea\n          cols=\"50\"\n          rows=\"20\"\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        />\n      </div>\n      <button>發布</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  width: 80%;\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1``;\n\nconst About = styled.h3`\n  max-width: 600px;\n  line-height: 1.5;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Root>\n      <Title>關於部落格的二三事</Title>\n      <About>\n        這是 Mentor program 程式導師計畫第4期第22週的作業 這週我們用 React\n        將課程裡做到一半的部落格功能補完。\n      </About>\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { LINK_URL } from \"../../WebApi\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getPostsByLimit,\n  getTotalCountOfPosts,\n} from \"../../redux/reducers/postReducer\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PaginationBtn = styled.button`\n  margin-top: 2rem;\n`;\n\nconst Header = styled.h1``;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function PostListPage() {\n  const [link, setLink] = useState(LINK_URL);\n  const links = useSelector((state) => state.posts.links);\n  const postsList = useSelector((state) => state.posts.postsList);\n  const totalCount = useSelector((state) => state.posts.postsCount);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPostsByLimit(link));\n  }, [link, dispatch]);\n\n  useEffect(() => {\n    dispatch(getTotalCountOfPosts());\n  }, [totalCount, dispatch]);\n  let PaginationBtns;\n  if (links && links.length === 4) {\n    PaginationBtns = (\n      <div>\n        <PaginationBtn onClick={() => setLink(links[0][0])}>\n          第一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[1][0])}>\n          上一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[2][0])}>\n          下一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[3][0])}>\n          最後一頁\n        </PaginationBtn>\n      </div>\n    );\n  } else {\n    PaginationBtns = (\n      <div>\n        <PaginationBtn onClick={() => setLink(links[0][0])}>\n          第一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[1][0])}>\n          下一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[2][0])}>\n          最後一頁\n        </PaginationBtn>\n      </div>\n    );\n  }\n  return (\n    <Root>\n      <Header>總共有: {totalCount} 筆文章。</Header>\n      {postsList && postsList.map((post) => <Post key={post.id} post={post} />)}\n      {PaginationBtns}\n    </Root>\n  );\n}\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","import React, { useState, useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  registerNewUser,\n  setIsLoadingUser,\n  setErrorMessage,\n} from \"../../redux/reducers/userReducer\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 5rem;\n`;\n\nexport default function RegistrationPage() {\n  console.log(useContext(AuthContext));\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const userId = useSelector((store) => store.user.id);\n  const errorMessage = useSelector((store) => store.user.errorMessage);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (userId) {\n      history.push(\"/\");\n    }\n    return () => {\n      dispatch(setErrorMessage(null));\n    };\n  }, [userId, history, dispatch]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(setIsLoadingUser(true));\n    dispatch(registerNewUser(nickname, username, password));\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        nickname:{\" \"}\n        <input value={nickname} onChange={(e) => setNickname(e.target.value)} />\n      </div>\n      <div>\n        username:{\" \"}\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  getPost,\n  updateOldPost,\n  setUpdateOldPostResponse,\n  setPost,\n} from \"../../redux/reducers/postReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 5rem;\n`;\n\nexport default function EditPostPAGE() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const history = useHistory();\n  const { id } = useParams();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n  const postUserId = post ? post.userId : null;\n  const userId = useSelector((store) => store.user.id);\n  const updateOldPostResponse = useSelector(\n    (store) => store.posts.updateOldPostResponse\n  );\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(updateOldPost(title, body, id));\n  };\n\n  useEffect(() => {\n    if (post && postUserId !== userId) {\n      history.push(\"/\");\n    }\n  }, [postUserId, userId, history, post]);\n\n  useEffect(() => {\n    dispatch(getPost(id));\n\n    return () => {\n      dispatch(setPost(null));\n    };\n  }, [id, history, dispatch]);\n  useEffect(() => {\n    if (post && post.id) {\n      setTitle(post.title);\n      setBody(post.body);\n      return;\n    }\n  }, [post]);\n  useEffect(() => {\n    if (updateOldPostResponse) {\n      history.push(`/posts/${id}`);\n    }\n    return () => {\n      dispatch(setUpdateOldPostResponse(false));\n    };\n  }, [updateOldPostResponse, history, id, dispatch]);\n  return (\n    <Form onSubmit={handleSubmit}>\n      {postUserId === userId && !isLoading && post && post.id ? (\n        <>\n          <div>\n            title:\n            <input value={title} onChange={(e) => setTitle(e.target.value)} />\n          </div>\n          <div>\n            body:\n            <textarea\n              cols=\"60\"\n              rows=\"30\"\n              value={body}\n              onChange={(e) => setBody(e.target.value)}\n            />\n          </div>\n          <button>更新</button>\n        </>\n      ) : null}\n    </Form>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport Header from \"../Header/\";\nimport SinglePostPage from \"../../pages/SinglePostPage\";\nimport {\n  getUserInfo,\n  setIsLoadingUser,\n} from \"../../redux/reducers/userReducer\";\nimport { getAuthToken } from \"../../utils\";\nimport { useDispatch } from \"react-redux\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AddPostPage from \"../../pages/AddPostPage/AddPostPage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport PostListPage from \"../../pages/PostListPage\";\nimport RegistrationPage from \"../../pages/RegistrationPage/RegistrationPage\";\nimport EditPostPage from \"../../pages/EditPostPage\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      dispatch(getUserInfo());\n    } else {\n      dispatch(setIsLoadingUser(false));\n    }\n  }, [dispatch]);\n  return (\n    <Root>\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <Route path=\"/register\">\n            <RegistrationPage />\n          </Route>\n          <Route path=\"/about\">\n            <AboutPage />\n          </Route>\n          <Route path=\"/postsList\">\n            <PostListPage />\n          </Route>\n          <Route path=\"/new-post\">\n            <AddPostPage />\n          </Route>\n          <Route path=\"/posts/:id/edit\" children={<EditPostPage />} />\n          <Route path=\"/posts/:id\" children={<SinglePostPage />} />\n        </Switch>\n      </Router>\n    </Root>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"./reducers/postReducer\";\nimport userReducer from \"./reducers/userReducer\";\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    user: userReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}