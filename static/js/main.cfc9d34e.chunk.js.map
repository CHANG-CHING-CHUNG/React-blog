{"version":3,"sources":["utils.js","WebApi.js","contexts.js","pages/LoginPage/LoginPage.js","pages/HomePage/HomePage.js","components/Header/Header.js","pages/SinglePostPage/SinglePostPage.js","pages/AddPostPage/AddPostPage.js","pages/AboutPage/AboutPage.js","pages/PostListPage/PostListPage.js","pages/RegistrationPage/RegistrationPage.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","then","res","json","AuthContext","createContext","ErrorMessage","styled","div","Form","form","LoginPage","setUser","useContext","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","onSubmit","e","preventDefault","method","body","JSON","stringify","login","data","ok","message","toString","push","value","onChange","target","type","Root","PostContainer","PostTitle","Link","PostDate","Post","post","to","id","title","Date","createdAt","toLocaleString","HomePage","posts","setPosts","useEffect","map","HeaderContainer","Brand","NavbarList","Nav","props","$active","LeftContainer","Header","location","useLocation","user","isLoading","pathname","onClick","PostBody","PostHeader","PostBodyWrapper","SinglePostPage","useParams","setPost","getPost","AddPostPage","setTitle","setBody","addPost","Title","h1","About","h3","AboutPage","PaginationBtn","button","PostListPage","PaginationBtns","totalCount","setTotalCount","link","setLink","links","setLinks","URL","a","get","replace","split","count","length","RegistrationPage","setIsLoading","nickname","setNickname","registerUser","App","Provider","exact","path","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfc9d34e.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\n\nexport const setAuthToken = (token) => {\n  localStorage.setItem(TOKEN_NAME, token);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};\n","import { getAuthToken } from \"./utils\";\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () => {\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n};\nexport const getPostsByLimit = (URL) => {\n  return fetch(URL).then(async (res) => {\n    let links = res.headers\n      .get(\"link\")\n      .replace(/\\</gi, \"\")\n      .replace(/\\>/gi, \"\")\n      .split(\",\");\n    const posts = await res.json();\n    links = links.map((link) => {\n      const newLink = link.replace(/ /, \"\").split(\";\");\n      return newLink;\n    });\n    return {\n      links,\n      posts,\n    };\n  });\n};\n\nexport const getTotalCountOfPosts = () => {\n  return fetch(\n    `${BASE_URL}/posts?_page=1&_limit=5&_sort=createdAt&_order=desc`\n  ).then((res) => res.headers.get(\"x-total-count\"));\n};\n\nexport const getPost = (id) => {\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const addPost = (title, body) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      authorization: `Bearer ${token}`,\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const registerUser = (nickname, username, password) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext(null);\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { login, getMe } from \"../../WebApi\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 5rem;\n`;\n\nexport default function LoginPage() {\n  const { setUser } = useContext(AuthContext);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    login(username, password).then((data) => {\n      if (data.ok === 0) {\n        return setErrorMessage(data.message);\n      }\n      setAuthToken(data.token);\n      getMe().then((res) => {\n        if (res.ok !== 1) {\n          setAuthToken(null);\n          return setErrorMessage(res.toString());\n        }\n        setUser(res.data);\n        history.push(\"/\");\n      });\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        username:{\" \"}\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { getPosts } from \"../../WebApi\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getPosts().then((posts) => setPosts(posts));\n  }, []);\n\n  return (\n    <Root>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </Root>\n  );\n}\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\n\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\nconst HeaderContainer = styled.div`\n  height: 64px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0px 32px;\n  box-sizing: border-box;\n  background-color: #fff;\n`;\n\nconst Brand = styled.div`\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  ${(props) =>\n    props.$active &&\n    `\n    background: rgba(0,0,0,0.1);\n  `}\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nexport default function Header() {\n  const location = useLocation();\n  const { user, setUser, isLoading } = useContext(AuthContext);\n  const history = useHistory();\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\n            關於部落格\n          </Nav>\n          <Nav to=\"/postsList\" $active={location.pathname === \"/postsList\"}>\n            文章列表\n          </Nav>\n          {user && (\n            <Nav $active={location.pathname === \"/new-post\"} to=\"/new-post\">\n              發布文章\n            </Nav>\n          )}\n        </NavbarList>\n      </LeftContainer>\n      {isLoading ? null : (\n        <NavbarList>\n          {!user && (\n            <Nav $active={location.pathname === \"/login\"} to=\"/login\">\n              登入\n            </Nav>\n          )}\n          {!user && (\n            <Nav $active={location.pathname === \"/register\"} to=\"/register\">\n              註冊\n            </Nav>\n          )}\n          {user && <Nav onClick={handleLogout}>登出</Nav>}\n        </NavbarList>\n      )}\n    </HeaderContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { useParams } from \"react-router-dom\";\nimport { getPost } from \"../../WebApi\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n  margin-bottom: 10px;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PostBody = styled.div``;\n\nSinglePostPage.propTypes = {\n  post: PropTypes.object,\n};\n\nconst PostHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  max-width: 600px;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`;\n\nconst PostBodyWrapper = styled.div`\n  max-width: 600px;\n  width: 100%;\n  text-align: center;\n  padding: 10px;\n`;\n\nexport default function SinglePostPage() {\n  let { id } = useParams();\n  const [post, setPost] = useState([]);\n\n  useEffect(() => {\n    getPost(id).then((post) => setPost(post));\n  }, [id]);\n\n  return (\n    <Root>\n      {post.id ? (\n        <PostContainer>\n          <PostHeader>\n            <PostTitle>{post.title}</PostTitle>\n            <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n          </PostHeader>\n          <PostBodyWrapper>\n            <PostBody>{post.body}</PostBody>\n          </PostBodyWrapper>\n        </PostContainer>\n      ) : null}\n    </Root>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { addPost } from \"../../WebApi\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 5rem;\n`;\n\nexport default function AddPostPage() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addPost(title, body).then((res) => {\n      if (res.ok === 0) {\n        setErrorMessage(res.message);\n      }\n      setTitle(\"\");\n      setBody(\"\");\n      history.push(\"/\");\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        title:\n        <input value={title} onChange={(e) => setTitle(e.target.value)} />\n      </div>\n      <div>\n        body:\n        <input value={body} onChange={(e) => setBody(e.target.value)} />\n      </div>\n      <button>發布</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  width: 80%;\n  display: flex;\n  margin: 0 auto;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nconst Title = styled.h1``;\n\nconst About = styled.h3`\n  max-width: 600px;\n  line-height: 1.5;\n`;\n\nexport default function AboutPage() {\n  return (\n    <Root>\n      <Title>關於部落格的二三事</Title>\n      <About>\n        這是 Mentor program 程式導師計畫第4期第22週的作業 這週我們用 React\n        將課程裡做到一半的部落格功能補完。\n      </About>\n    </Root>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport { Link } from \"react-router-dom\";\nimport { getPostsByLimit, getTotalCountOfPosts } from \"../../WebApi\";\n\nconst Root = styled.div`\n  width: 80%;\n  margin: 0 auto;\n`;\n\nconst PostContainer = styled.div`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 16px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 24px;\n  color: #333;\n  text-decoration: none;\n`;\n\nconst PostDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nconst PaginationBtn = styled.button`\n  margin-top: 2rem;\n`;\n\nconst Header = styled.h1``;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\n      <PostDate>{new Date(post.createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function PostListPage() {\n  const [posts, setPosts] = useState([]);\n  const [totalCount, setTotalCount] = useState(\"\");\n  const [link, setLink] = useState(\n    \"https://student-json-api.lidemy.me/posts?_page=1&_limit=5&_sort=createdAt&_order=desc\"\n  );\n  const [links, setLinks] = useState([]);\n  useEffect(() => {\n    getPostsByLimit(link).then((posts) => {\n      setLinks(posts.links);\n      setPosts(posts.posts);\n    });\n  }, [link]);\n\n  useEffect(() => {\n    getTotalCountOfPosts().then((count) => setTotalCount(count));\n  }, [totalCount]);\n  let PaginationBtns;\n  if (links.length === 4) {\n    PaginationBtns = (\n      <div>\n        <PaginationBtn onClick={() => setLink(links[0][0])}>\n          第一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[1][0])}>\n          上一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[2][0])}>\n          下一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[3][0])}>\n          最後一頁\n        </PaginationBtn>\n      </div>\n    );\n  } else {\n    PaginationBtns = (\n      <div>\n        <PaginationBtn onClick={() => setLink(links[0][0])}>\n          第一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[1][0])}>\n          下一頁\n        </PaginationBtn>\n        <PaginationBtn onClick={() => setLink(links[2][0])}>\n          最後一頁\n        </PaginationBtn>\n      </div>\n    );\n  }\n  return (\n    <Root>\n      <Header>總共有: {totalCount} 筆文章。</Header>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n      {PaginationBtns}\n    </Root>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { registerUser, getMe } from \"../../WebApi\";\nimport { setAuthToken } from \"../../utils\";\nimport { AuthContext } from \"../../contexts\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  text-align: center;\n  margin-top: 5rem;\n`;\n\nexport default function RegistrationPage() {\n  const { setUser, setIsLoading } = useContext(AuthContext);\n  const [nickname, setNickname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    registerUser(nickname, username, password).then((res) => {\n      if (!res.ok) {\n        setErrorMessage(res.message);\n      }\n      setAuthToken(res.token);\n      getMe().then((res) => {\n        if (res.ok) {\n          setIsLoading(false);\n          setUser(res.data);\n          history.push(\"/\");\n        }\n      });\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        nickname:{\" \"}\n        <input value={nickname} onChange={(e) => setNickname(e.target.value)} />\n      </div>\n      <div>\n        username:{\" \"}\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </div>\n      <div>\n        password:{\" \"}\n        <input\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          type=\"password\"\n        />\n      </div>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </Form>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport Header from \"../Header/\";\nimport SinglePostPage from \"../../pages/SinglePostPage\";\nimport { AuthContext } from \"../../contexts\";\nimport { getMe } from \"../../WebApi\";\nimport { getAuthToken } from \"../../utils\";\n\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport AddPostPage from \"../../pages/AddPostPage/AddPostPage\";\nimport AboutPage from \"../../pages/AboutPage\";\nimport PostListPage from \"../../pages/PostListPage\";\nimport RegistrationPage from \"../../pages/RegistrationPage/RegistrationPage\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      getMe().then((res) => {\n        if (res.ok) {\n          setIsLoading(false);\n          setUser(res.data);\n        }\n      });\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  return (\n    <AuthContext.Provider value={{ user, setUser, isLoading, setIsLoading }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/register\">\n              <RegistrationPage />\n            </Route>\n            <Route path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route path=\"/postsList\">\n              <PostListPage />\n            </Route>\n            <Route path=\"/new-post\">\n              <AddPostPage />\n            </Route>\n            <Route path=\"/posts/:id\" children={<SinglePostPage />} />\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}